package Pack01;

import java.io.InputStream;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.net.Socket;

import javafx.application.Application;
import javafx.application.Platform;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

public class client extends Application {

	Socket socket;

	void start() {
		Thread thread = new Thread() {

			@Override
			public void run() {
				System.out.println(10);
				try {
					socket = new Socket();
					socket.connect(new InetSocketAddress("192.168.102.29", 5700));
					Platform.runLater(()->{
						displayText("연결완료");
						btnConn.setText("stop");
						btnSend.setDisable(false);
					});
				} catch (Exception e) {
					// TODO: handle exception
				}
				receive();
			}
		};

		thread.start();
	}

	void stops() {
		try {
			Platform.runLater(()->{
				displayText("연결끊음");
				btnConn.setText("start");
				btnSend.setDisable(true);
			});
			if(socket!=null && !socket.isClosed()) {
				socket.close();
			}
		} catch (Exception e) {}
	}

	void receive() {
		while(true) {
			try {
				byte[] byteArr = new byte[100];
				InputStream inputStream = socket.getInputStream();
				int readByteCount = inputStream.read(byteArr);
				String data = new String(byteArr, 0, readByteCount, "UTF-8");
				Platform.runLater(()->{
					displayText(data);
				});
			} catch (Exception e) {
			}
		}
	}

	void send(String data) {
		Thread thread = new Thread() {
			@Override
			public void run() {
				try {
					byte[] byteArr = data.getBytes("UTF-8");
					OutputStream outputStream = socket.getOutputStream();
					outputStream.write(byteArr);
					outputStream.flush();
					Platform.runLater(()->{
					});
				} catch (Exception e) {
				}
			}
		};
		thread.start();
	}

	TextArea txtDisplay;
	TextField tf;
	Button btnConn, btnSend;

	@Override
	public void start(Stage primaryStage) throws Exception {

		// 창 설정 하기 
		VBox root = new VBox();
		root.setPrefSize(400, 300); // 창의 크기 


		// 채팅 창에 엔터를 치면 된다.
		txtDisplay = new TextArea();
		txtDisplay.setEditable(false);

		BorderPane bottom = new BorderPane();
		tf = new TextField();
		tf.setPrefSize(60, 30);
		tf.setOnAction(new EventHandler<ActionEvent>() {

			@Override
			public void handle(ActionEvent event) {
				System.out.println("코끼리");
				tf.setOnAction(e->{
					send(tf.getText());
					tf.setText(""); 
				});
			}
		});


		btnConn = new Button("start");
		btnConn.setOnAction(e->{
			if(btnConn.getText().equals("start")) {
				start();
			} else if(btnConn.getText().equals("stop")){
				stops();
			}
		});


		btnSend = new Button("send");
		btnSend.setDisable(true);
		btnSend.setOnAction(e->{
			send(tf.getText());
		});

		root.getChildren().addAll(btnConn, btnSend, txtDisplay, tf);

		//
		Scene scene = new Scene(root);
		primaryStage.setScene(scene);

		System.out.println(2);
		primaryStage.setTitle("클라이언트");
		primaryStage.show();
		System.out.println(3);


	}

	void displayText(String text) {
		txtDisplay.appendText(text+"\n");
	}

	public static void main(String[] args) {
		System.out.println(1);
		launch();
	}

}
