/*---------------------------------------------*/			
			String name = "김유신";
			int age = 26;
			int salary = 300;
			String home = "서울";
			//String sql="INSERT into banana values('개나리',25,1000,'하회마을')";
			String sql="insert into banana values('"+name+"',"+age+","+salary+",'"+home+"')";

/*---------------------------------------------*/

	//char charAt(int index); // char 타입으로 인수 전달

/*---------------------------------------------*/

package PACK01;

class Tiger{

	void func01() {
		System.out.println("함수 1번 콜");
	}
	void func02(int a, int b) {
		System.out.println("함수 2번 콜");
	}
	int func03() {
		return 1000;
	}
	int func04(int a, int b) {
		return a+b;
	}
	static void func05() {
		System.out.println("함수 5번 콜");
	}

}

public class Hello {

	public static void main(String[] args) {

/*---------------------------------------------*/
// toString 문자열 출력 함수
	
		String s1 = "무궁화꽃이피었습니다";
		System.out.println(s1);
		
		// 이것이 정석이다. s1.toString()
		System.out.println(s1.toString());

/*---------------------------------------------*/		
// length() 길이를 알려 주는 함수

		// 리턴 값이 있다. 문자열의 갯수(길이)를 알려준다.
		System.out.println(s1.length());

/*---------------------------------------------*/		
// charAt: 0부터 시작해서 3번 째 글자를 받아준다.

		s1.charAt(3); 

		// char 타입으로 받아야한다.
		char c1 = s1.charAt(3);
		System.out.println(c1);
		
		System.out.println(s1.charAt(3));

/*---------------------------------------------*/		
// equals 두 개의 문자열을 비교해준다.

		// 두 개의 문자열을 비교 같으면 true 다르면 false
		String s2 = "무궁화꽃이피었습니다";
		System.out.println(s1.equals(s2));
		
		if(s1.equals(s2)) {
			System.out.println("패스워드가 정확합니다.");
		} else {
			System.out.println("패스워드가 틀립니다.");			
		}

/*---------------------------------------------*/		
// indexOF 문자가 있는 위치를 찾아준다.

		// "피었"이 몇 번 째에 있는지 찾아준다.
		// 못 찾으면 -1이 뜬다. // 정확한 글자를 찾아준다.
		int n2 = s1.indexOf("꽃이");
		System.out.println(n2);

/*---------------------------------------------*/		
// replace 원하는 글자를 바꿔준다.
		
		String s3 = s1.replace("무궁화", "개나리");
		System.out.println(s3);
		System.out.println(s1); // s1이 변하는 것은 아니다.
		// 자기가 자기 것을 바꿀 수도 있다.
		// 꼭 글자 수가 같지 않아도 된다.
		s1 = s1.replace("무궁화", "무화과나무");
		System.out.println(s1);

/*---------------------------------------------*/		
// substring 원하는 범위 만큼 문자를 출력해준다.

		// 시작 숫자에서 마지막 숫자-1까지 잘라준다.
		// 글자 수는 마지막 숫자 - 시작 숫자
		String s4 = s1.substring(2, 4);
		System.out.println(s4);
		// 4번 부터 끝까지 출력된다.
		String s5 = s1.substring(4);
		System.out.println(s5);

/*---------------------------------------------*/		
// toLowerCase, toUpperCase 소문자, 대문자 변환

		// 소문자, 대문자로 변환해준다.
		String s6 = "Apple";
		System.out.println(s6);
		String s7 = s6.toLowerCase();
		System.out.println(s7);
		String s8 = s6.toUpperCase();
		System.out.println(s8);

/*---------------------------------------------*/
// 클래스와 함수 만드는 것 복습

		System.out.println("-------------------");
		Tiger tiger = new Tiger();
		tiger.func01();
		tiger.func02(3, 5);
		System.out.println(tiger.func03());
		System.out.println(tiger.func04(5,5));
		
		tiger.func05();
		// final 함수는 객체를 생성하지 않아도 된다.
		Tiger.func05();

/*---------------------------------------------*/
// format 숫자와 문자열을 이어주는 함수

		// "%d호랑이" %d 뒤에는 반드시 숫자가 따라온다.
		// %d 자리에 30이 들어간다.
		// "%d호랑이%d",30,50 두 개를 넣을 수 있다.
		System.out.println("-------------------");
		String s9 = String.format("%d호랑이%d",30,50);
		System.out.println(s9);
		
		// %s는 문자열을 넣어준다.
		String s10 = String.format("%d호랑이%s",100,"거북이");
		System.out.println(s10);
		
		int num = 99;
		String s12 = "나비";
		String s11 = String.format("%d호랑이%s",num,s12);
		System.out.println(s11);

/*---------------------------------------------*/
// format을 이용하여 sql문장을 만들기
		
		//String sql="INSERT into banana values('개나리',25,1000,'하회마을')";
		String name = "강감찬";
		int age = 25;
		int salary = 1000;
		String home = "서울";
		String s13 = String.format("insert into banana values('%s',%d,%d,'%s')",name,age,salary,home);
		System.out.println(s13);

	}		
}


/*---------------------------------------------*/
// 함수를 사용하여 sql문 insert 시키기

//int a = (new Random()).nextInt(100);
package PACK01;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.util.Random;

class Dao{ // Data Access Object 필드 CRUD 객체

	void insert(String name, int age, int salary, String home) {
		
		try {

			//1단계 : class 확인
			//현재 찾고 싶은 클래스를 찾아준다.
			String driver ="oracle.jdbc.driver.OracleDriver"; 
			System.out.println(Class.forName(driver));
			System.out.println(1);

			//2단계 : 로그인
			Connection con=null;

			String dburl="jdbc:oracle:thin:@127.0.0.1:1521:orcl";
			String username="khm"; 
			String password="1"; 

			con=DriverManager.getConnection(dburl,username,password);			

			System.out.println(2);

			//3단계: 쿼리문 작성 및 컴파일
			PreparedStatement ps=null;

         /* String name = "강감찬";
			int age = 26;
			int salary = 300;
			String home = "서울"; */
			//String sql="INSERT into banana values('개나리',25,1000,'하회마을')";
			String sql = String.format("insert into banana values('%s',%d,%d,'%s')",name,age,salary,home);

			System.out.println(sql);

			ps = con.prepareStatement(sql);

			System.out.println(3);

			//4단계: 실행
			ps.executeUpdate(); //f5번 누른것과 같다.
			System.out.println(4);

			//5단계: 접속 종료
			ps.close(); 
			System.out.println(5);

		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		
	}

}

public class Hello {

	public static void main(String[] args) {

		Dao dao = new Dao();
		dao.insert("세종대왕",50,1500,"조선시대");
		dao.insert("자라", 12, 300, "바다");
		
		String[] ar = {"서울","대구","대전","부산"};
		
		for (int i = 0; i < 15; i++) {
			int r1 = (new Random()).nextInt(100);
			int r2 = (new Random()).nextInt(1000);
			int r3 = (new Random()).nextInt(4);
			dao.insert("곰돌이"+i, r1, r2, ar[r3]);
		}
		
		
	}

}


/*---------------------------------------------*/
// 함수를 사용하여 sql문 update 시키기

//int a = (new Random()).nextInt(100);
package PACK01;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.util.Random;

class Dao{ // Data Access Object 필드 CRUD 객체

	void insert(String name, int age, int salary, String home) {

		try {

			//1단계 : class 확인
			//현재 찾고 싶은 클래스를 찾아준다.
			String driver ="oracle.jdbc.driver.OracleDriver"; 
			System.out.println(Class.forName(driver));
			System.out.println(1);

			//2단계 : 로그인
			Connection con=null;

			String dburl="jdbc:oracle:thin:@127.0.0.1:1521:orcl";
			String username="khm"; 
			String password="1"; 

			con=DriverManager.getConnection(dburl,username,password);			

			System.out.println(2);

			//3단계: 쿼리문 작성 및 컴파일
			PreparedStatement ps=null;

			/* String name = "강감찬";
			int age = 26;
			int salary = 300;
			String home = "서울"; */
			//String sql="INSERT into banana values('개나리',25,1000,'하회마을')";
			String sql = String.format("insert into banana values('%s',%d,%d,'%s')",name,age,salary,home);

			System.out.println(sql);

			ps = con.prepareStatement(sql);

			System.out.println(3);

			//4단계: 실행
			ps.executeUpdate(); //f5번 누른것과 같다.
			System.out.println(4);

			//5단계: 접속 종료
			ps.close(); 
			System.out.println(5);

		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}

	}

	void update(String name2, int age, int salary, String home, String name) {

		try {

			//1단계 : class 확인
			//현재 찾고 싶은 클래스를 찾아준다.
			String driver ="oracle.jdbc.driver.OracleDriver"; 
			System.out.println(Class.forName(driver));
			System.out.println(1);

			//2단계 : 로그인
			Connection con=null;

			String dburl="jdbc:oracle:thin:@127.0.0.1:1521:orcl";
			String username="khm"; 
			String password="1"; 

			con=DriverManager.getConnection(dburl,username,password);			

			System.out.println(2);

			//3단계: 쿼리문 작성 및 컴파일
			PreparedStatement ps=null;

			/* String name = "강감찬";
			int age = 26;
			int salary = 300;
			String home = "서울"; */
			//String sql="INSERT into banana values('개나리',25,1000,'하회마을')";
			String sql = String.format("update banana set name = '%s', age = %d, salary = %d, home = '%s' where name = '%s'",name2,age,salary,home,name);
			
			System.out.println(sql);

			ps = con.prepareStatement(sql);

			System.out.println(3);

			//4단계: 실행
			ps.executeUpdate(); //f5번 누른것과 같다.
			System.out.println(4);

			//5단계: 접속 종료
			ps.close(); 
			System.out.println(5);

		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}

	}

}

public class Hello {

	public static void main(String[] args) {

		Dao dao = new Dao();
		/*dao.insert("세종대왕",50,1500,"조선시대");
		dao.insert("자라", 12, 300, "바다");*/

		/*String[] ar = {"서울","대구","대전","부산"};

		for (int i = 0; i < 15; i++) {
			int r1 = (new Random()).nextInt(100);
			int r2 = (new Random()).nextInt(1000);
			int r3 = (new Random()).nextInt(4);
			dao.insert("곰돌이"+i, r1, r2, ar[r3]);
		}*/

		dao.update("호랑이0",15, 300,"제주도","곰돌이0");
		

	}

}
